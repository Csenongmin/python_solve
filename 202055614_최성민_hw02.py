#컴퓨터알고리즘[061] 정보컴퓨터공학부 202055614 최성민
import sys
input = sys.stdin.readline
    
# 1<=n<=40000
n = int(input().strip())

# h(n)은 g(m) = n을 만족하는 m의 개수를 출력하는 함수.
# n == 1:  2->1 = 1
# n == 2:  4->2->1 = 1
# n == 3:  8->4->2->1, 3->4->2->1 = 2
# 다음 스텝은 전 과정에서 짝수로 시작했을 경우 2n과 n-1에서 시작되는 경우를, 
# 홀수로 시작했을 경우 2n에서 시작되는 경우를 더해야 한다.
# 해당 과정을 반복하면 피보나치 수열의 규칙이 나옴을 알 수 있다. 
# 피보나치 수열 작성을 위해서 dp로 구현하였다.

dp = [0] * 40001

dp[1] = 1  # 
dp[2] = 1  # 



for i in range(3, 40001):
    dp[i] = dp[i-1] + dp[i-2]



# modular연산 출력
print(dp[n]%1000007)
